package agent_script.compiler;

import agent_script.compiler.analyzer.Location;

import java.util.logging.LogRecord;

/**
 * Represents a message generated by the compiler.
 */
public class CompilerMessage {
    /**
     * The unique identifier of the message.
     */
    private final String id;

    /**
     * The compilation stage where the message was produced.
     */
    private final CompilerMessageTemplate.CompilationStage compilationStage;

    /**
     * The level of the message.
     */
    private final CompilerMessageTemplate.Level level;

    /**
     * The location the message points to.
     */
    private final Location location;

    /**
     * The actual text of the message.
     */
    private final String message;

    public CompilerMessage(
            String id,
            CompilerMessageTemplate.CompilationStage compilationStage,
            CompilerMessageTemplate.Level level,
            Location location,
            String message) {
        this.id = id;
        this.compilationStage = compilationStage;
        this.level = level;
        this.location = location;
        this.message = message;
    }

    /**
     * @return the value of {@link #id}
     */
    public String getId() {
        return id;
    }

    /**
     * @return the value of {@link #compilationStage}
     */
    public CompilerMessageTemplate.CompilationStage getCompilationStage() {
        return compilationStage;
    }

    /**
     * @return the value of {@link #level}
     */
    public CompilerMessageTemplate.Level getLevel() {
        return level;
    }

    /**
     * @return the value of {@link #location}
     */
    public Location getLocation() {
        return location;
    }

    /**
     * @return the value of {@link #message}
     */
    public String getMessage() {
        return message;
    }

    /**
     * @return the message as a {@link LogRecord}
     */
    public LogRecord asLogRecord() {
        Location location = getLocation();
        return new LogRecord(
                getLevel().toLoggingLevel(),
                String.format("[%-5s] [%-8s] %s\n%s",
                        getId(),
                        getCompilationStage(),
                        getMessage(),
                        location == null
                                ? ""
                                : String.format("\t%s\n%s",
                                location.toDescription(), location.toAnnotatedSource()).replaceAll("\n", "\n\t")));
    }
}
